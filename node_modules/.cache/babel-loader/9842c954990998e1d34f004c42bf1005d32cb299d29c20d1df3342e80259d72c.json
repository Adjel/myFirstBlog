{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nconst url = \"https://jsonplaceholder.typicode.com/posts\";\nfunction FetchArticleComponent() {\n  _s();\n  const [articles, setArticles] = React.useState([]);\n  React.useEffect(() => {\n    async function getArticles() {\n      const response = await fetch(url);\n      const articles = await response.json();\n      console.log({\n        articles\n      });\n      return articles;\n    }\n    getArticles();\n  }, []);\n}\n_s(FetchArticleComponent, \"XsOpLvUbTkfx79dw07TVNsBviNQ=\");\n_c = FetchArticleComponent;\nexport default [articles];\nvar _c;\n$RefreshReg$(_c, \"FetchArticleComponent\");","map":{"version":3,"names":["React","url","FetchArticleComponent","_s","articles","setArticles","useState","useEffect","getArticles","response","fetch","json","console","log","_c","$RefreshReg$"],"sources":["/Users/adjel-pro/SoloPreneur/myFirstBlog/myfirstblog/src/components/FetchArticleComponent/FetchArticleComponent.js"],"sourcesContent":["import React from \"react\";\n\nconst url = \"https://jsonplaceholder.typicode.com/posts\";\n\nfunction FetchArticleComponent() {\n  const [articles, setArticles] = React.useState([]);\n\n  React.useEffect(() => {\n    async function getArticles() {\n      const response = await fetch(url);\n      const articles = await response.json();\n      console.log({ articles });\n\n      return articles;\n    }\n\n    getArticles();\n  }, []);\n}\n\nexport default [articles];\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAG,4CAA4C;AAExD,SAASC,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAAC,EAAE,CAAC;EAElDN,KAAK,CAACO,SAAS,CAAC,MAAM;IACpB,eAAeC,WAAWA,CAAA,EAAG;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACT,GAAG,CAAC;MACjC,MAAMG,QAAQ,GAAG,MAAMK,QAAQ,CAACE,IAAI,CAAC,CAAC;MACtCC,OAAO,CAACC,GAAG,CAAC;QAAET;MAAS,CAAC,CAAC;MAEzB,OAAOA,QAAQ;IACjB;IAEAI,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;AACR;AAACL,EAAA,CAdQD,qBAAqB;AAAAY,EAAA,GAArBZ,qBAAqB;AAgB9B,eAAe,CAACE,QAAQ,CAAC;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}